---

- name: Check if MySQL is already installed.
  stat: 
    path: /etc/init.d/mysql
  register: mysql_installed

- name: Install APT extras
  apt:
    pkg:
      - dirmngr
      - debconf    
    update_cache: yes
    state: latest

- name: Add official MySQL package authentication key
  apt_key:
    keyserver: pool.sks-keyservers.net
    id: 5072E1F5
    state: present

- name: Add MySQL repository
  apt_repository:
    repo: deb http://repo.mysql.com/apt/debian/ buster mysql-8.0
    filename: mysql80
    state: present

- name: Set MySQL root password
  debconf:
    name: mysql-community-server
    question: mysql-community-server/root-pass
    value: "{{ mysql_root_password }}"
    vtype: password

- name: Confirm MySQL root password
  debconf:
    name: mysql-community-server
    question: mysql-community-server/re-root-pass
    value: "{{ mysql_root_password }}"
    vtype: password

- name: Enable Legacy Authentication Method
  debconf:
    name: mysql-community-server
    question: mysql-server/default-auth-override
    value: Use Legacy Authentication Method (Retain MySQL 5.x Compatibility)
    vtype: select

- name: Install/Update MySQL 8.0 Community Server
  apt:
    pkg:
      - mysql-server
      - python-pymysql
    update_cache: yes
    state: latest

- name: Ensure mysql is running and starts on boot
  service:
    name: mysql
    state: started
    enabled: yes
  become: yes

- name: my.cnf configuration
  template: 
    src: my.j2
    dest: "{{ mysql_config_file }}" 
    owner: root
    group: root
    mode: 0644
    force: true
  notify: restart mysql

# - name: Ensure mysql root password is updated for all root accounts
#   mysql_user:
#     name: root
#     host: "%"
#     password: "{{ mysql_root_password }}"
#     priv: '*.*:ALL,GRANT'
#     check_implicit_admin: true
#   become: yes
#   notify: Restart MySQL

- name: User Creation
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_pw }}"
    priv: "*.*:ALL"
    check_implicit_admin: yes
    login_password: "{{ mysql_root_password }}"
    state: present

- name: Database creation
  mysql_db:
    name: "{{ mysql_db }}"
    collation: utf8_general_ci
    encoding: utf8
    state: present

# - name: Allow Ports
#   ufw: 
#     rule: allow
#     port: "{{ item }}"
#   with_items:
#     - 3306
