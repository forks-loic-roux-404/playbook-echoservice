##################################################
### Pre-checks

- name: Check installed PHP version
  shell: 'dpkg --list | grep php | grep "^ii" | wc -l'
  register: php_installed

#php_required_installed
- name: Check if required PHP version is installed
  shell: 'dpkg --list | grep php{{ php_version }} | grep "^ii" | wc -l'
  register: php_required_installed

- name: Remove different PHP version if installed
  apt:
    name: php*
    state: absent
    purge: yes
    autoremove: yes
  when: php_installed.stdout != "0"

- name: remove unused php binaries
  apt:  
    purge: yes
    pkg: 
      - php5.6
      - libapache2-mod-php5.6
      - php7.0
      - libapache2-mod-php7.0
      - php7.1
      - libapache2-mod-php7.1
    state: absent
  become: yes

### Install and configure PHP
- name: Add apt key for Debian
  apt_key:
    url: "{{ php_repo_key }}"
    state: present

- name: Add repository for Debian
  apt_repository: 
    repo: "deb {{ php_repo }} {{ ansible_distribution_release }} main"
    state: present
    update_cache: yes

- name: Install PHP Packages
  apt:
    state: present
    pkg:
    - php{{ php_version }}
    - php{{ php_version }}-fpm
    - php{{ php_version }}-mysql
    - php{{ php_version }}-sqlite3
#    - php{{ php_version }}-mcrypt # outdated since php 7.2
    - php{{ php_version }}-cli
    - php{{ php_version }}-curl
    - php{{ php_version }}-gd
    - php{{ php_version }}-intl
    - php{{ php_version }}-json
    - php{{ php_version }}-mbstring
    - php{{ php_version }}-opcache
    - php{{ php_version }}-readline
    - php{{ php_version }}-xml
    - php{{ php_version }}-xsl
    - php{{ php_version }}-zip
    - php{{ php_version }}-bz2
    #- php{{ php_version }}-redis
    - php{{ php_version }}-gmp
    - php{{ php_version }}-igbinary
    - php{{ php_version }}-bcmath
    - php{{ php_version }}-imagick
#    - php{{ php_version }}-memcache # outdated since php 7.3
    - php{{ php_version }}-memcached
    #- php{{ php_version }}-mongodb
    - php{{ php_version }}-msgpack
    - php{{ php_version }}-pspell
    #- php{{ php_version }}-redis
    - php{{ php_version }}-ssh2
    - php{{ php_version }}-xmlrpc
    - php{{ php_version }}-common
    - php{{ php_version }}-xdebug
    - php{{ php_version }}-apcu

  notify:
   - restart php-fpm
   - restart nginx

- name: Copy PHP-FPM config
  template:
    src: www.conf
    dest: /etc/php/{{ php_version }}/fpm/pool.d/www.conf

- name: Configure timezone
  lineinfile:
    dest: /etc/php/{{ php_version }}/fpm/php.ini
    regexp: '^;date.timezone'
    line: 'date.timezone = "Europe/Paris'
    backrefs: yes
  notify:
   - restart php-fpm

- name: Configure xDebug
  template:
    src: 20-xdebug.ini
    dest: /etc/php/{{ php_version }}/fpm/conf.d/20-xdebug.ini
  notify:
   - restart php-fpm

- name: Start PHP-FPM and enable the service in autostart
  service:
    name: php{{ php_version }}-fpm
    state: started
    enabled: yes

##################################################
### Install PHPUnit
- name: Install PHPUnit
  get_url:
    url: "{{ phpunit_url }}"
    dest: "{{ phpunit_path }}"
    mode: 0777

### Install Composer
- name: Download Composer
  get_url:
    url: "{{ composer_url }}"
    dest: "{{ composer_tmp }}"
    mode: 0777

- name: Install Composer
  shell: "cat {{ composer_tmp }} | php -- --install-dir={{ composer_path }}"

- name: Rename Composer
  shell: mv -f {{ composer_path }}/composer.phar {{ composer_path }}/composer

- name: Php config variables
  include_vars: "../defaults/php_ini_{{ app_env }}.yml"

- name: php.ini configuration
  template: 
    src: "php.ini.j2"
    dest: "{{ php_config_file }}" 
    owner: root
    group: root
    mode: 0644
    #force: true
  notify: restart php-fpm